plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
    testImplementation 'io.rest-assured:rest-assured:5.0.1'
    testImplementation 'io.rest-assured:xml-path:5.0.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'
    runtimeOnly 'com.h2database:h2:2.1.212'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    implementation 'org.modelmapper:modelmapper:3.1.0'
}

tasks.named('test') {

    useJUnitPlatform()

    filter {
        includeTestsMatching  '*.unit_test.*'
    }

    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }

    finalizedBy jacocoTestReport
}

task integrationTest(type: Test){
    useJUnitPlatform()

    filter {
        includeTestsMatching  '*.integration_test.*'
    }

    testLogging.showStandardStreams = true
}

project.tasks.integrationTest.dependsOn(test)
project.tasks.check.dependsOn(integrationTest)

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('/jacoco')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}
